<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kh.mvc.member.model.dao.MemberMapper">
	<sql id="selectMemberSql">
		SELECT NO, 
       		   ID, 
	       	   PASSWORD, 
    	   	   ROLE,
       		   NAME, 
       		   PHONE, 
       		   EMAIL, 
       		   ADDRESS, 
       		   HOBBY, 
       		   STATUS, 
       		   ENROLL_DATE,
       		   MODIFY_DATE
		FROM MEMBER
	</sql>
	
	<resultMap type="Member" id="memberResultMap">
		<!-- 테이블에서 기본 키를 의미(primaryKey) -->
		<id property="no" column="NO"/>
		<!-- 테이블에서 일반 컬럼들을 의미 -->
		<result property="id" column="ID"/>
		<result property="password" column="PASSWORD"/>
		<result property="role" column="ROLE"/>
		<result property="name" column="NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
		<result property="address" column="ADDRESS"/>
		<result property="hobby" column="HOBBY"/>
		<result property="status" column="STATUS"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="modifyDate" column="MODIFY_DATE"/>
	</resultMap>

	<select id="selectCount" resultType="_int">
		<!-- 쿼리문 작성시 세미콜론(;)은 없이 작성! -->
		SELECT COUNT(*) FROM MEMBER
	</select>
	
	
	<select id="selectAll" resultMap="memberResultMap" >
	   <!-- 
	   방법 1)
		SELECT NO, 
       		   ID, 
	       	   PASSWORD, 
    	   	   ROLE,
       		   NAME, 
       		   PHONE, 
       		   EMAIL, 
       		   ADDRESS, 
       		   HOBBY, 
       		   STATUS, 
       		   ENROLL_DATE AS enrollDate, 
       		   MODIFY_DATE AS modifyDate
		FROM MEMBER
    	WHERE STATUS = 'Y'
	    -->
	    <!-- 
	    방법 2)
	     SELECT NO, 
       		   ID, 
	       	   PASSWORD, 
    	   	   ROLE,
       		   NAME, 
       		   PHONE, 
       		   EMAIL, 
       		   ADDRESS, 
       		   HOBBY, 
       		   STATUS, 
       		   ENROLL_DATE,
       		   MODIFY_DATE
		FROM MEMBER
    	WHERE STATUS = 'Y'
	     -->
	     
	     <include refid="selectMemberSql" />
	     WHERE STATUS = 'Y'
	</select>

	<select id="findMemberById" parameterType="string" resultMap="memberResultMap">
		<include refid="selectMemberSql" />
    	WHERE ID = #{id} AND STATUS = 'Y'
	</select>

	<insert id="insertMember" parameterType="Member"
			useGeneratedKeys="true" keyProperty="no"  keyColumn="NO">
		INSERT INTO MEMBER (
			   NO, 
       		   ID, 
	       	   PASSWORD, 
    	   	   ROLE,
       		   NAME, 
       		   PHONE, 
       		   EMAIL, 
       		   ADDRESS, 
       		   HOBBY, 
       		   STATUS, 
       		   ENROLL_DATE,
       		   MODIFY_DATE
       	) VALUES ( <!-- ?에 필드의 이름을 넘겨준다 -->
       		   SEQ_UNO.NEXTVAL,
       		   #{id},
       		   #{password},
       		   DEFAULT,
       		   #{name},
       		   #{phone},
       		   #{email},
       		   #{address},
       		   #{hobby},
       		   DEFAULT,
       		   DEFAULT,
       		   DEFAULT
       		 )  
	</insert>
	
	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER 
		SET 
			NAME = #{name},
			PHONE = #{phone},
			EMAIL = #{email},
			ADDRESS = #{address},
			HOBBY = #{hobby},
			MODIFY_DATE = SYSDATE 
		WHERE NO = #{no}
	</update>
	
	<delete id="deleteMember" parameterType="_int">
		UPDATE MEMBER 
		SET 
			STATUS = 'N'
		WHERE 
			NO = #{no}
	</delete>
</mapper>
  